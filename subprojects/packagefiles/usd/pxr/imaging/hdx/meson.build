cpp = meson.get_compiler('cpp')

hdx_lib = shared_library(
    'usd_hdx',
    [
        # PUBLIC_CLASSES
        'aovInputTask.cpp',
        'boundingBoxTask.cpp',
        'colorizeSelectionTask.cpp',
        'colorChannelTask.cpp',
        'colorCorrectionTask.cpp',
        'drawTargetTask.cpp',
        'freeCameraSceneDelegate.cpp',
        'fullscreenShader.cpp',
        'hgiConversions.cpp',
        'oitBufferAccessor.cpp',
        'oitRenderTask.cpp',
        'oitResolveTask.cpp',
        'oitVolumeRenderTask.cpp',
        'package.cpp',
        'pickTask.cpp',
        'pickFromRenderBufferTask.cpp',
        'presentTask.cpp',
        'renderTask.cpp',
        'renderSetupTask.cpp',
        'selectionSceneIndexObserver.cpp',
        'selectionTask.cpp',
        'selectionTracker.cpp',
        'shadowTask.cpp',
        'simpleLightTask.cpp',
        'skydomeTask.cpp',
        'task.cpp',
        'taskController.cpp',
        'tokens.cpp',
        'types.cpp',
        'visualizeAovTask.cpp',

        # PRIVATE_CLASSES
        'debugCodes.cpp',
        'unitTestDelegate.cpp',
    ],
    install: true,
    implicit_include_directories: false,
    cpp_args: args + ['-DHDX_EXPORTS=1'],
    dependencies: [usd_dep],
    link_with: [
        garch_lib,
        glf_lib,
        pxOsd_lib,
        hd_lib,
        hdSt_lib,
        hgi_lib,
        hgiInterop_lib,
        hio_lib,
        hgiGL_lib,
        cameraUtil_lib,
    ],
)
