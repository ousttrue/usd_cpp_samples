cpp = meson.get_compiler('cpp')
shlwapi = cpp.find_library('Shlwapi', required: true)

tf_lib = shared_library(
    'usd_tf',
    [
        # PUBLIC_CLASSES
        'anyUniquePtr.cpp',
        'anyWeakPtr.cpp',
        'atomicOfstreamWrapper.cpp',
        'bigRWMutex.cpp',
        'bitUtils.cpp',
        'debug.cpp',
        'debugNotice.cpp',
        'denseHashMap.cpp',
        'denseHashSet.cpp',
        'diagnostic.cpp',
        'diagnosticBase.cpp',
        'diagnosticHelper.cpp',
        'diagnosticMgr.cpp',
        'dl.cpp',
        'enum.cpp',
        'envSetting.cpp',
        'error.cpp',
        'errorMark.cpp',
        'errorTransport.cpp',
        'exception.cpp',
        'expiryNotifier.cpp',
        'fastCompression.cpp',
        'fileUtils.cpp',
        'getenv.cpp',
        'hash.cpp',
        'iterator.cpp',
        'mallocTag.cpp',
        'notice.cpp',
        'nullPtr.cpp',
        'ostreamMethods.cpp',
        'pathUtils.cpp',
        'patternMatcher.cpp',
        'pointerAndBits.cpp',
        'pyLock.cpp',
        'pyObjWrapper.cpp',
        'pyTracing.cpp',
        'refBase.cpp',
        'refCount.cpp',
        'refPtr.cpp',
        'refPtrTracker.cpp',
        'regTest.cpp',
        'registryManager.cpp',
        'safeOutputFile.cpp',
        'scoped.cpp',
        'scopeDescription.cpp',
        'setenv.cpp',
        'singleton.cpp',
        'smallVector.cpp',
        'spinRWMutex.cpp',
        'stackTrace.cpp',
        'stacked.cpp',
        'status.cpp',
        'stl.cpp',
        'stopwatch.cpp',
        'stringUtils.cpp',
        'templateString.cpp',
        'tf.cpp',
        'token.cpp',
        'type.cpp',
        'typeFunctions.cpp',
        'typeNotice.cpp',
        'warning.cpp',
        'weakBase.cpp',
        'weakPtr.cpp',
        'weakPtrFacade.cpp',
        # PRIVATE_CLASSES
        'atomicRenameUtil.cpp',
        'debugCodes.cpp',
        'noticeRegistry.cpp',
        # CPPFILES
        'initConfig.cpp',
        'preprocessorUtils.cpp',
        'pxrDoubleConversion/double-conversion.cc',
        'pxrDoubleConversion/bignum-dtoa.cc',
        'pxrDoubleConversion/bignum.cc',
        'pxrDoubleConversion/cached-powers.cc',
        'pxrDoubleConversion/diy-fp.cc',
        'pxrDoubleConversion/fast-dtoa.cc',
        'pxrDoubleConversion/fixed-dtoa.cc',
        'pxrDoubleConversion/strtod.cc',
        'pxrLZ4/lz4.cpp',
    ],
    install: true,
    implicit_include_directories: false,
    include_directories: pxr_inc,
    cpp_args: args + ['-DTF_EXPORTS=1'],
    dependencies: [boost_dep, tbb_dep, shlwapi],
    link_with: arch_lib,
)
