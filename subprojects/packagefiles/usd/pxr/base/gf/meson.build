cpp = meson.get_compiler('cpp')

gf_lib = shared_library(
    'usd_gf',
    [
        # PUBLIC_CLASSES
        'bbox3d.cpp',
        'camera.cpp',
        'dualQuatd.cpp',
        'dualQuatf.cpp',
        'dualQuath.cpp',
        'frustum.cpp',
        'gamma.cpp',
        'half.cpp',
        'homogeneous.cpp',
        'ilmbase_half.cpp',
        'interval.cpp',
        'line.cpp',
        'line2d.cpp',
        'lineSeg.cpp',
        'lineSeg2d.cpp',
        'math.cpp',
        'matrixData.cpp',
        'matrix2d.cpp',
        'matrix2f.cpp',
        'matrix3f.cpp',
        'matrix3d.cpp',
        'matrix4f.cpp',
        'matrix4d.cpp',
        'multiInterval.cpp',
        'plane.cpp',
        'quatd.cpp',
        'quatf.cpp',
        'quath.cpp',
        'quaternion.cpp',
        'range1d.cpp',
        'range1f.cpp',
        'range2d.cpp',
        'range2f.cpp',
        'range3d.cpp',
        'range3f.cpp',
        'ray.cpp',
        'rect2i.cpp',
        'rotation.cpp',
        'size2.cpp',
        'size3.cpp',
        'transform.cpp',
        'vec2d.cpp',
        'vec2f.cpp',
        'vec2h.cpp',
        'vec2i.cpp',
        'vec3d.cpp',
        'vec3f.cpp',
        'vec3h.cpp',
        'vec3i.cpp',
        'vec4d.cpp',
        'vec4f.cpp',
        'vec4h.cpp',
        'vec4i.cpp',

        # PRIVATE_CLASSES
        'ostreamHelpers.cpp',
    ],
    install: true,
    implicit_include_directories: false,
    include_directories: pxr_inc,
    cpp_args: args + ['-DGF_EXPORTS=1'],
    dependencies: [boost_dep],
    link_with: [tf_lib, arch_lib],
)
